# application.properties
spring.datasource.url=jdbc:mysql://localhost:3306/playwithme
spring.datasource.username=root
spring.datasource.password=


# TRACE: Bardzo szczegó?owe informacje diagnostyczne do debugowania.
# DEBUG: Szczegó?owe informacje do rozwi?zywania problemów i debugowania.
# INFO: Podstawowe informacje o dzia?aniu aplikacji; domy?lny poziom.
# WARN: Ostrze?enia o potencjalnych problemach, niekrytyczne.
# ERROR: B??dy wskazuj?ce na powa?ne problemy; dla wyj?tków i sytuacji krytycznych.
# FATAL: Logowanie bardzo powa?nych b??dów; rzadko u?ywane.
# OFF: Wy??cza logowanie; brak rejestrowania informacji.

logging.level.org.springframework.boot=INFO


# Hibernate Properties

#Strategia DDL Hibernate
#   none: Brak akcji DDL.
#   update: Hibernate aktualizuje schemat bazy danych, je?li to konieczne.
#   create: Tworzy schemat bazy danych przy ka?dym uruchomieniu aplikacji, niszcz?c poprzednie dane.
#   create-drop: Tworzy schemat przy uruchomieniu i usuwa go po zamkni?ciu aplikacji.
#   validate: Sprawdza, czy schemat jest zgodny z mapowaniem encji.

spring.jpa.hibernate.ddl-auto=update


#Dialekt Hibernate okre?la, jak Hibernate b?dzie generowa? specyficzny dla SQL kod,
# zgodny z u?ywan? baz? danych (tutaj MySQL)

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect


#W??cz logowanie SQL
spring.jpa.show-sql=true